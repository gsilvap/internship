Tarefas gerais:
☐ Template Latex
☐ Falar com o professor Raul Barbosa de forma a ESPECIFICAR OS OBJETIVOS E OS REQUISITOS DO ESTAGIO   @critical
  Gestão do projeto Agile
☐ Resposta do Robert Natella ao email? @toggle(15-01-27 15:05) @toggle(15-02-05 15:49)
 Enviado mail a 27/01 (foi visto, mas sem resposta)
 Enviado mail novamente a 05/02 (ainda sem resposta, não foi visto)
☐ Possiveis programas onde se possam injetar falhas de software (kernel e mais?)                      @high
  Restrições:
     Open Source
     Linguagem C
     
Tarefas até à próxima reunião:
  2 Threads principais:
   ☐ Estudar o funcionamento do GCC parser
   ☐ Especificar como é que vão ser implementadas e quais as contraints envolvidas na sua implementação
 ☐ Verifiacr se as alterações feitas ao nivel do GCC parser são iguais às produzidas por essa mesma falha de software real introduzida no Xen ou no KVM

Dúvidas do email:
 ☐ Recomenda alguma leitura relativamente às técnicas G-SWFIT e SWIFI? Têm diferenças? Quais?
    Generic Software Fault Injection Technique
    Software Implemented Fault Injection

Literatura:
 ☐ On the Emulation of Software Faults by Software Fault Injection
 ☐ Resilience Assessment and Evaluation of Computing Systems cap13 e 14 ? (Lido anteriormente: cap4)
 ☐ Xception: Software Fault Injection and Monitoring in Processor Functional Units
 ☐ SWIFT: Software Implemented Fault Tolerance
 ☐ Dependable Computing and Fault-Tolerant Systems Vol.5
 ☐ Orthogonal Defect Classification Cap.9
 ☐ Injection of faults at component interfaces and inside the component code: are they equivalent?
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
 ✔ É necessário fazer relatórios de progresso para submeter na plataforma de estágios? Com que regularidade o devo fazer? @done (15-02-05 15:45) @project(Dúvidas do email)
  Sim, a plataforma avisa quando se devem fazer os relatorios de progresso, mas provavelmente é mensalmente.
  Ferreira: Nunca submeteu qualquer tipo de relatorio na plataforma.
 ✔ Numa das reuniões falou-se que o João Durães tinha especificado e documentado 12 falhas de software, mas no paper, não estão bem explicitas, ou então eu não percebi muito bem quais foram as 12. Ele faz inicialmente a separação  através do tipo do ODC (Assignment, Checking, Interface, Algorithm, Function), e depois em cada tipo, em missing construct, wrong construct ou extraneous construct. Finalmente retira as que são mais representativas (acontecem mais vezes). @done (15-02-05 15:44) @project(Dúvidas do email)
  Foram selecionadas as 13 falhas mais representativas, mas so foram implementadas 12, uma vez que a única extraneous construct era dificil de implementar e o duraes foi ?calão?
 ✔ O João Durães criou uma aplicação para injecção de falhas de software, certo? SIM @done (15-02-05 15:41) @project(Dúvidas do email)
  Vou ter acesso à mesma? Não, uma vez que ele injetou as falhas ao nivel da  execução dos programas e não ao nivel do código antes de compilar
 ✔ Gantt (especificar mais os requesitos, tabela de riscos? ) @done (15-02-05 15:38) @project(Reunião)
  Não é necessário, só depois para o relatorio de estagio intermédio e final
 ✔ Conselhos relativamente à decisão 1 @done (15-02-05 15:38) @project(Reunião)
  1 - Ficheiro antes de compilar
 ✔ Ler paper do Duraes             @critical  @done (15-02-03 22:55)
 ✔ Imprimir materiais do estágio   @done (15-02-03 22:55)
