	.file	"gen_test_char.c"
	.section	.rodata
	.align 8
.LC0:
	.ascii	"/* this file is automatically generated by gen_test_char, do"
	.ascii	" not edit */\n#define T_ES"
	.string	"CAPE_SHELL_CMD     (%u)\n#define T_ESCAPE_PATH_SEGMENT  (%u)\n#define T_OS_ESCAPE_PATH       (%u)\n#define T_HTTP_TOKEN_STOP      (%u)\n#define T_ESCAPE_LOGITEM       (%u)\n#define T_ESCAPE_FORENSIC      (%u)\n\nstatic const unsigned char test_char_table[256] = {"
.LC1:
	.string	"\n    "
.LC2:
	.string	"&;`'\"|*?~<>^()[]{}$\\\n"
.LC3:
	.string	"$-_.+!*'(),:@&=~"
.LC4:
	.string	"$-_.+!*'(),:@&=/~"
.LC5:
	.string	" \t()<>@,;:\\\"/[]?={}"
.LC6:
	.string	"%u%c"
.LC7:
	.string	"\n};"
	.text
	.globl	main
	.type	main, @function
main:
.LFB2:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$32, %rsp
	movl	%edi, -20(%rbp)
	movq	%rsi, -32(%rbp)
	subq	$8, %rsp
	pushq	$32
	movl	$16, %r9d
	movl	$8, %r8d
	movl	$4, %ecx
	movl	$2, %edx
	movl	$1, %esi
	movl	$.LC0, %edi
	movl	$0, %eax
	call	printf
	addq	$16, %rsp
	movl	$0, -4(%rbp)
	jmp	.L2
.L15:
	movb	$0, -5(%rbp)
	movl	-4(%rbp), %ecx
	movl	$-858993459, %edx
	movl	%ecx, %eax
	mull	%edx
	shrl	$4, %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	sall	$2, %eax
	subl	%eax, %ecx
	movl	%ecx, %edx
	testl	%edx, %edx
	jne	.L3
	movl	$.LC1, %edi
	movl	$0, %eax
	call	printf
.L3:
	cmpl	$0, -4(%rbp)
	je	.L4
	movl	-4(%rbp), %eax
	movl	%eax, %esi
	movl	$.LC2, %edi
	call	strchr
	testq	%rax, %rax
	je	.L4
	orb	$1, -5(%rbp)
.L4:
	call	__ctype_b_loc
	movq	(%rax), %rax
	movl	-4(%rbp), %edx
	movzbl	%dl, %edx
	addq	%rdx, %rdx
	addq	%rdx, %rax
	movzwl	(%rax), %eax
	movzwl	%ax, %eax
	andl	$8, %eax
	testl	%eax, %eax
	jne	.L5
	movl	-4(%rbp), %eax
	movl	%eax, %esi
	movl	$.LC3, %edi
	call	strchr
	testq	%rax, %rax
	jne	.L5
	orb	$2, -5(%rbp)
.L5:
	call	__ctype_b_loc
	movq	(%rax), %rax
	movl	-4(%rbp), %edx
	movzbl	%dl, %edx
	addq	%rdx, %rdx
	addq	%rdx, %rax
	movzwl	(%rax), %eax
	movzwl	%ax, %eax
	andl	$8, %eax
	testl	%eax, %eax
	jne	.L6
	movl	-4(%rbp), %eax
	movl	%eax, %esi
	movl	$.LC4, %edi
	call	strchr
	testq	%rax, %rax
	jne	.L6
	orb	$4, -5(%rbp)
.L6:
	cmpl	$0, -4(%rbp)
	je	.L7
	call	__ctype_b_loc
	movq	(%rax), %rax
	movl	-4(%rbp), %edx
	movzbl	%dl, %edx
	addq	%rdx, %rdx
	addq	%rdx, %rax
	movzwl	(%rax), %eax
	movzwl	%ax, %eax
	andl	$2, %eax
	testl	%eax, %eax
	jne	.L8
	movl	-4(%rbp), %eax
	movl	%eax, %esi
	movl	$.LC5, %edi
	call	strchr
	testq	%rax, %rax
	je	.L7
.L8:
	orb	$8, -5(%rbp)
.L7:
	cmpl	$0, -4(%rbp)
	je	.L9
	call	__ctype_b_loc
	movq	(%rax), %rax
	movl	-4(%rbp), %edx
	movzbl	%dl, %edx
	addq	%rdx, %rdx
	addq	%rdx, %rax
	movzwl	(%rax), %eax
	movzwl	%ax, %eax
	andl	$16384, %eax
	testl	%eax, %eax
	je	.L10
	cmpl	$34, -4(%rbp)
	je	.L10
	cmpl	$92, -4(%rbp)
	je	.L10
	call	__ctype_b_loc
	movq	(%rax), %rax
	movl	-4(%rbp), %edx
	movzbl	%dl, %edx
	addq	%rdx, %rdx
	addq	%rdx, %rax
	movzwl	(%rax), %eax
	movzwl	%ax, %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L9
.L10:
	orb	$16, -5(%rbp)
.L9:
	call	__ctype_b_loc
	movq	(%rax), %rax
	movl	-4(%rbp), %edx
	movzbl	%dl, %edx
	addq	%rdx, %rdx
	addq	%rdx, %rax
	movzwl	(%rax), %eax
	movzwl	%ax, %eax
	andl	$16384, %eax
	testl	%eax, %eax
	je	.L11
	cmpl	$58, -4(%rbp)
	je	.L11
	cmpl	$124, -4(%rbp)
	je	.L11
	cmpl	$37, -4(%rbp)
	je	.L11
	call	__ctype_b_loc
	movq	(%rax), %rax
	movl	-4(%rbp), %edx
	movzbl	%dl, %edx
	addq	%rdx, %rdx
	addq	%rdx, %rax
	movzwl	(%rax), %eax
	movzwl	%ax, %eax
	andl	$2, %eax
	testl	%eax, %eax
	jne	.L11
	cmpl	$0, -4(%rbp)
	jne	.L12
.L11:
	orb	$32, -5(%rbp)
.L12:
	cmpl	$254, -4(%rbp)
	ja	.L13
	movl	$44, %edx
	jmp	.L14
.L13:
	movl	$32, %edx
.L14:
	movzbl	-5(%rbp), %eax
	movl	%eax, %esi
	movl	$.LC6, %edi
	movl	$0, %eax
	call	printf
	addl	$1, -4(%rbp)
.L2:
	cmpl	$255, -4(%rbp)
	jbe	.L15
	movl	$.LC7, %edi
	call	puts
	movl	$0, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE2:
	.size	main, .-main
	.ident	"GCC: (GNU) 4.9.2 20150204 (prerelease)"
	.section	.note.GNU-stack,"",@progbits
